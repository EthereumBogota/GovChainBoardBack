{
	"compiler": {
		"version": "0.8.21+commit.d9974bed"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "CheckpointUnorderedInsertion",
				"type": "error"
			}
		],
		"devdoc": {
			"details": "This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.",
			"errors": {
				"CheckpointUnorderedInsertion()": [
					{
						"details": "A value was attempted to be inserted on a past checkpoint."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"token_GCB_flattened.sol": "Checkpoints"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"token_GCB_flattened.sol": {
			"keccak256": "0x65ebecafceeb1a892b73bc769610ea8dec5ecde6f40de97ab9f7c07beb532a08",
			"urls": [
				"bzz-raw://7101d166017e923ea5ae1179ac6e735f3a9c642c6326f1d8b233c9b3798026eb",
				"dweb:/ipfs/QmVnfDkQCQ3hQ4sZTMoL4KtLqkqE1ZWi9Jy2YBtoWNTfW9"
			]
		}
	},
	"version": 1
}